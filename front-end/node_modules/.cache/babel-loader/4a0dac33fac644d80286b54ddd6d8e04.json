{"ast":null,"code":"var _jsxFileName = \"/home/dill5446/git_workspace/paul_new_portfolio/front-end/src/dropdownMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport './styles/dropdownMenu.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = styled.button`\ncolor: green;\nborder-bottom: 2px solid #daa520;\npadding: .5rem;\nmargin: .5rem;\nbackground: transparent;\nfont-weight: 800;\nborder-radius: .7rem;\n`;\n_c = Button;\nconst MenuContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nbackground: rgb(211,211,211);\njustify-content: flex-start;\nalign-items: center;\nposition: absolute;\noverflow: auto;\nheight: 10rem;\nwidth: 10rem;\nmargin: 1rem;\npadding: 1rem;\nborder-radius: .5rem;\n`;\n_c2 = MenuContainer;\nexport default function DropdownMenu({\n  children,\n  style,\n  menuOptions\n}) {\n  _s();\n\n  const [menuOpen, toggleMenu] = useState(false);\n\n  const handleClick = e => {\n    e.preventDefault();\n    toggleMenu(!menuOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'sticky'\n    },\n    children: /*#__PURE__*/_jsxDEV(OutsideClickHandler, {\n      onOutsideClick: handleClick,\n      children: menuOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MenuContainer, {\n          children: Object.values(menuOptions).reverse().map((item, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.href,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"menulink\",\n            onClick: () => toggleMenu(!menuOpen),\n            children: item.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onFocus: handleClick,\n        children: [\" \", children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DropdownMenu, \"yeQGfL6/PQAv7jNQ6wdXTEMGEME=\");\n\n_c3 = DropdownMenu;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"MenuContainer\");\n$RefreshReg$(_c3, \"DropdownMenu\");","map":{"version":3,"sources":["/home/dill5446/git_workspace/paul_new_portfolio/front-end/src/dropdownMenu.tsx"],"names":["React","useState","styled","OutsideClickHandler","Button","button","MenuContainer","div","DropdownMenu","children","style","menuOptions","menuOpen","toggleMenu","handleClick","e","preventDefault","position","Object","values","reverse","map","item","index","href","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;AACA,OAAO,2BAAP;;AAQA,OAAO,MAAMC,MAAM,GAAGF,MAAM,CAACG,MAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;KAAMD,M;AAUb,MAAME,aAAa,GAAGJ,MAAM,CAACK,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMD,a;AAeN,eAAe,SAASE,YAAT,CAAuB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAvB,EAAgE;AAAA;;AAC7E,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBZ,QAAQ,CAAC,KAAD,CAAvC;;AAEA,QAAMa,WAAW,GAAIC,CAAD,IAAW;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,UAAU,CAAC,CAACD,QAAF,CAAV;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA,2BACE,QAAC,mBAAD;AAAqB,MAAA,cAAc,EAAEH,WAArC;AAAA,gBACOF,QAAQ,gBACL;AAAA,gCACA,QAAC,MAAD;AAAA,oBAASH;AAAT;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,aAAD;AAAA,oBACCS,MAAM,CAACC,MAAP,CAAcR,WAAd,EAA2BS,OAA3B,GAAqCC,GAArC,CAAyC,CAACC,IAAD,EAAOC,KAAP,kBACtC;AAAe,YAAA,IAAI,EAAED,IAAI,CAACE,IAA1B;AAAgC,YAAA,MAAM,EAAC,QAAvC;AAAgD,YAAA,GAAG,EAAC,qBAApD;AACA,YAAA,SAAS,EAAC,UADV;AACqB,YAAA,OAAO,EAAE,MAAMX,UAAU,CAAC,CAACD,QAAF,CAD9C;AAAA,sBAC4DU,IAAI,CAACG;AADjE,aAAQF,KAAR;AAAA;AAAA;AAAA;AAAA,kBADH;AADD;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,gBAUL,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAET,WAAjB;AAAA,wBACCL,QADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAXV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA3BuBD,Y;;MAAAA,Y","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport OutsideClickHandler from 'react-outside-click-handler'\nimport './styles/dropdownMenu.css'\n\ninterface Props {\n    children?: React.ReactNode,\n    style?: object,\n    menuOptions: Array<any> | Object\n}\n\nexport const Button = styled.button`\ncolor: green;\nborder-bottom: 2px solid #daa520;\npadding: .5rem;\nmargin: .5rem;\nbackground: transparent;\nfont-weight: 800;\nborder-radius: .7rem;\n`\n\nconst MenuContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nbackground: rgb(211,211,211);\njustify-content: flex-start;\nalign-items: center;\nposition: absolute;\noverflow: auto;\nheight: 10rem;\nwidth: 10rem;\nmargin: 1rem;\npadding: 1rem;\nborder-radius: .5rem;\n`\n\nexport default function DropdownMenu ({ children, style, menuOptions }: Props) {\n  const [menuOpen, toggleMenu] = useState(false)\n\n  const handleClick = (e:any) => {\n    e.preventDefault()\n    toggleMenu(!menuOpen)\n  }\n\n  return (\n    <div style={{ position: 'sticky' }} >\n      <OutsideClickHandler onOutsideClick={handleClick}>\n            {menuOpen\n              ? <div>\n                <Button>{children}</Button>\n                <MenuContainer>\n                {Object.values(menuOptions).reverse().map((item, index) => (\n                    <a key={index} href={item.href} target=\"_blank\" rel=\"noopener noreferrer\"\n                    className='menulink' onClick={() => toggleMenu(!menuOpen)}>{item.name}</a>\n                ))}\n              </MenuContainer>\n              </div>\n              : <Button onFocus={handleClick}\n              > {children}</Button>\n            }\n          </OutsideClickHandler>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}