{"ast":null,"code":"var _jsxFileName = \"/home/dill5446/git_workspace/paul_new_portfolio/front-end/src/dropdownMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = styled.button`\ncolor: green;\nbackground-color: red;\nborder-bottom: 2px solid #daa520;\npadding: .5rem;\nmargin: .5rem;\nbackground: transparent;\n`;\n_c = Button;\nexport default function DropdownMenu({\n  children,\n  style,\n  menuOptions\n}) {\n  _s();\n\n  const [menuOpen, toggleMenu] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => toggleMenu(true),\n      children: [\" \", children, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: menuOpen ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: Object.values(menuOptions).map((item, index) => /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => toggleMenu(!menuOpen),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: item.href,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DropdownMenu, \"yeQGfL6/PQAv7jNQ6wdXTEMGEME=\");\n\n_c2 = DropdownMenu;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"DropdownMenu\");","map":{"version":3,"sources":["/home/dill5446/git_workspace/paul_new_portfolio/front-end/src/dropdownMenu.tsx"],"names":["React","Fragment","useState","styled","Button","button","DropdownMenu","children","style","menuOptions","menuOpen","toggleMenu","Object","values","map","item","index","href","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AASA,OAAO,MAAMC,MAAM,GAAGD,MAAM,CAACE,MAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAPO;KAAMD,M;AASb,eAAe,SAASE,YAAT,CAAuB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAvB,EAAgE;AAAA;;AAC7E,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBT,QAAQ,CAAC,KAAD,CAAvC;AAEA,sBACE;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMS,UAAU,CAAC,IAAD,CAAjC;AAAA,sBAA2CJ,QAA3C,eACE;AAAA,kBACGG,QAAQ,gBACL,QAAC,QAAD;AAAA,oBACCE,MAAM,CAACC,MAAP,CAAcJ,WAAd,EAA2BK,GAA3B,CAA+B,CAACC,IAAD,EAAOC,KAAP,kBAC9B,QAAC,MAAD;AAAoB,YAAA,OAAO,EAAE,MAAML,UAAU,CAAC,CAACD,QAAF,CAA7C;AAAA,mCACE;AAAG,cAAA,IAAI,EAAEK,IAAI,CAACE,IAAd;AAAA,wBAAqBF,IAAI,CAACG;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF,aAAaF,KAAb;AAAA;AAAA;AAAA;AAAA,kBADD;AADD;AAAA;AAAA;AAAA;AAAA,gBADK,gBAQL,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AATN;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GArBuBV,Y;;MAAAA,Y","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport styled from 'styled-components'\n\ninterface Props {\n    children?: React.ReactNode,\n    style?: object,\n    menuOptions: Array<any> | Object\n\n}\n\nexport const Button = styled.button`\ncolor: green;\nbackground-color: red;\nborder-bottom: 2px solid #daa520;\npadding: .5rem;\nmargin: .5rem;\nbackground: transparent;\n`\n\nexport default function DropdownMenu ({ children, style, menuOptions }: Props) {\n  const [menuOpen, toggleMenu] = useState(false)\n\n  return (\n    <div>\n        <Button onClick={() => toggleMenu(true)}> {children}\n          <div >\n            {menuOpen\n              ? <Fragment>\n                {Object.values(menuOptions).map((item, index) => (\n                  <Button key={index} onClick={() => toggleMenu(!menuOpen)}>\n                    <a href={item.href}>{item.name}</a>\n                  </Button>\n                ))}\n              </Fragment>\n              : <Fragment />\n            }\n          </div>\n        </Button>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}