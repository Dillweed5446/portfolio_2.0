{"ast":null,"code":"var _jsxFileName = \"/home/dill5446/git_workspace/paul_new_portfolio/front-end/src/dropdownMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = styled.button`\ncolor: green;\nbackground-color: red;\nborder-bottom: 2px solid #daa520;\npadding: .5rem;\nmargin: .5rem;\nbackground: transparent;\nfont-weight: 800;\nborder-radius: .7rem;\n`;\n_c = Button;\nconst MenuLink = styled.a`\ncolor: green;\nbackground-color: red;\nborder-bottom: 2px solid #daa520;\npadding: .5rem;\nmargin: .5rem;\nbackground: transparent;\nfont-weight: 800;\nborder-radius: .7rem;\n`;\n_c2 = MenuLink;\nconst MenuContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nbackground: rgb(211,211,211);\njustify-content: flex-start;\nalign-items: center;\nposition: absolute;\noverflow: auto;\nheight: 10rem;\nwidth: 10rem;\nmargin: 1rem;\npadding: 1rem;\nborder-radius: .5rem;\n`;\n_c3 = MenuContainer;\nexport default function DropdownMenu({\n  children,\n  style,\n  menuOptions\n}) {\n  _s();\n\n  const [menuOpen, toggleMenu] = useState(false);\n  const menuRef = useRef(null); // const handleBlur = (e:any) => {\n  //   e.preventDefault()\n  //   toggleMenu(!menuOpen)\n  // }\n\n  const handleClick = e => {\n    e.preventDefault();\n    toggleMenu(!menuOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'sticky'\n    },\n    children: menuOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MenuContainer, {\n        onBlur: e => {\n          if (e.currentTarget === e.target) {\n            toggleMenu(!menuOpen);\n          }\n        },\n        children: Object.values(menuOptions).map((item, index) => /*#__PURE__*/_jsxDEV(MenuLink, {\n          href: item.href,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          onClick: () => toggleMenu(!menuOpen),\n          ref: menuRef,\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onFocus: handleClick // useRef hook may be the key to solving this problem.\n      ,\n      children: [\" \", children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DropdownMenu, \"SL+tFOTzUZCUkf8N9jwL4MyXbW0=\");\n\n_c4 = DropdownMenu;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"MenuLink\");\n$RefreshReg$(_c3, \"MenuContainer\");\n$RefreshReg$(_c4, \"DropdownMenu\");","map":{"version":3,"sources":["/home/dill5446/git_workspace/paul_new_portfolio/front-end/src/dropdownMenu.tsx"],"names":["React","useState","useRef","styled","Button","button","MenuLink","a","MenuContainer","div","DropdownMenu","children","style","menuOptions","menuOpen","toggleMenu","menuRef","handleClick","e","preventDefault","position","currentTarget","target","Object","values","map","item","index","href","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AASA,OAAO,MAAMC,MAAM,GAAGD,MAAM,CAACE,MAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;KAAMD,M;AAUb,MAAME,QAAQ,GAAGH,MAAM,CAACI,CAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,Q;AAWN,MAAME,aAAa,GAAGL,MAAM,CAACM,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMD,a;AAeN,eAAe,SAASE,YAAT,CAAuB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAvB,EAAgE;AAAA;;AAC7E,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBd,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAMe,OAAO,GAAGd,MAAM,CAAC,IAAD,CAAtB,CAF6E,CAI7E;AACA;AACA;AACA;;AAEA,QAAMe,WAAW,GAAIC,CAAD,IAAW;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,UAAU,CAAC,CAACD,QAAF,CAAV;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA,cACSN,QAAQ,gBACL;AAAA,8BACA,QAAC,MAAD;AAAA,kBAAUH;AAAV;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,aAAD;AAAe,QAAA,MAAM,EAAGO,CAAD,IAAO;AAC5B,cAAIA,CAAC,CAACG,aAAF,KAAoBH,CAAC,CAACI,MAA1B,EAAkC;AAChCP,YAAAA,UAAU,CAAC,CAACD,QAAF,CAAV;AACD;AACF,SAJD;AAAA,kBAMCS,MAAM,CAACC,MAAP,CAAcX,WAAd,EAA2BY,GAA3B,CAA+B,CAACC,IAAD,EAAOC,KAAP,kBAC5B,QAAC,QAAD;AAAsB,UAAA,IAAI,EAAED,IAAI,CAACE,IAAjC;AAAuC,UAAA,MAAM,EAAC,QAA9C;AAAuD,UAAA,GAAG,EAAC,qBAA3D;AACA,UAAA,OAAO,EAAE,MAAMb,UAAU,CAAC,CAACD,QAAF,CADzB;AAEU,UAAA,GAAG,EAAEE,OAFf;AAAA,oBAE0BU,IAAI,CAACG;AAF/B,WAAeF,KAAf;AAAA;AAAA;AAAA;AAAA,gBADH;AAND;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAgBL,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEV,WAAjB,CACS;AADT;AAAA,sBAECN,QAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBZ;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAxCuBD,Y;;MAAAA,Y","sourcesContent":["import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\n\ninterface Props {\n    children?: React.ReactNode,\n    style?: object,\n    menuOptions: Array<any> | Object,\n\n}\n\nexport const Button = styled.button`\ncolor: green;\nbackground-color: red;\nborder-bottom: 2px solid #daa520;\npadding: .5rem;\nmargin: .5rem;\nbackground: transparent;\nfont-weight: 800;\nborder-radius: .7rem;\n`\nconst MenuLink = styled.a`\ncolor: green;\nbackground-color: red;\nborder-bottom: 2px solid #daa520;\npadding: .5rem;\nmargin: .5rem;\nbackground: transparent;\nfont-weight: 800;\nborder-radius: .7rem;\n`\n\nconst MenuContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nbackground: rgb(211,211,211);\njustify-content: flex-start;\nalign-items: center;\nposition: absolute;\noverflow: auto;\nheight: 10rem;\nwidth: 10rem;\nmargin: 1rem;\npadding: 1rem;\nborder-radius: .5rem;\n`\n\nexport default function DropdownMenu ({ children, style, menuOptions }: Props) {\n  const [menuOpen, toggleMenu] = useState(false)\n  const menuRef = useRef(null)\n\n  // const handleBlur = (e:any) => {\n  //   e.preventDefault()\n  //   toggleMenu(!menuOpen)\n  // }\n\n  const handleClick = (e:any) => {\n    e.preventDefault()\n    toggleMenu(!menuOpen)\n  }\n\n  return (\n    <div style={{ position: 'sticky' }} >\n            {menuOpen\n              ? <div>\n                <Button >{children}</Button>\n                <MenuContainer onBlur={(e) => {\n                  if (e.currentTarget === e.target) {\n                    toggleMenu(!menuOpen)\n                  }\n                }}>\n                  {/* {console.log(menuRef)} */}\n                {Object.values(menuOptions).map((item, index) => (\n                    <MenuLink key={index} href={item.href} target=\"_blank\" rel=\"noopener noreferrer\"\n                    onClick={() => toggleMenu(!menuOpen)}\n                              ref={menuRef} >{item.name}</MenuLink>\n                ))}\n              </MenuContainer>\n              </div>\n              : <Button onFocus={handleClick}\n                         // useRef hook may be the key to solving this problem.\n              > {children}</Button>\n            }\n          {/* </div> */}\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}