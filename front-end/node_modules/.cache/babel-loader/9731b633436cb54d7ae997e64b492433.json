{"ast":null,"code":"var _jsxFileName = \"/home/dill5446/git_workspace/paul_new_portfolio/front-end/src/dropdownMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = styled.button`\ncolor: green;\nbackground-color: red;\nborder-bottom: 2px solid #daa520;\npadding: .5rem;\nmargin: .5rem;\nbackground: transparent;\nfont-weight: 800;\nborder-radius: .7rem;\n`;\n_c = Button;\nconst MenuLink = styled.a`\ncolor: green;\nbackground: #FF0000;\nborder-right: 2px solid #daa520;\nborder-bottom: 2px solid #daa520;\npadding: .5rem;\nmargin: .5rem;\nbackground: transparent;\nfont-weight: 800;\nborder-radius: .7rem;\n`;\n_c2 = MenuLink;\nconst MenuContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nbackground: rgb(211,211,211);\njustify-content: flex-start;\nalign-items: center;\nposition: absolute;\noverflow: auto;\nheight: 10rem;\nwidth: 10rem;\nmargin: 1rem;\npadding: 1rem;\nborder-radius: .5rem;\n`;\n_c3 = MenuContainer;\nexport default function DropdownMenu({\n  children,\n  style,\n  menuOptions\n}) {\n  _s();\n\n  const [menuOpen, toggleMenu] = useState(false);\n  const hovered = useRef(null); // const handleBlur = (e:any) => {\n  //   e.preventDefault()\n  //   toggleMenu(!menuOpen)\n  // }\n\n  const handleClick = e => {\n    e.preventDefault();\n    toggleMenu(!menuOpen);\n  };\n\n  const mousedOn = () => {\n    if (hovered.current) hovered.current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'sticky'\n    },\n    children: /*#__PURE__*/_jsxDEV(OutsideClickHandler, {\n      onOutsideClick: handleClick,\n      children: menuOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MenuContainer, {\n          children: Object.values(menuOptions).reverse().map((item, index) => /*#__PURE__*/_jsxDEV(MenuLink, {\n            ref: hovered,\n            onMouseOver: mousedOn,\n            href: item.href,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            onClick: () => toggleMenu(!menuOpen),\n            children: item.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onFocus: handleClick // useRef hook may be the key to solving this problem.\n        ,\n        children: [\" \", children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DropdownMenu, \"TSYBg6RAXa9NPExbwmzCQWJpANo=\");\n\n_c4 = DropdownMenu;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"MenuLink\");\n$RefreshReg$(_c3, \"MenuContainer\");\n$RefreshReg$(_c4, \"DropdownMenu\");","map":{"version":3,"sources":["/home/dill5446/git_workspace/paul_new_portfolio/front-end/src/dropdownMenu.tsx"],"names":["React","useRef","useState","styled","OutsideClickHandler","Button","button","MenuLink","a","MenuContainer","div","DropdownMenu","children","style","menuOptions","menuOpen","toggleMenu","hovered","handleClick","e","preventDefault","mousedOn","current","focus","position","Object","values","reverse","map","item","index","href","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;;AAQA,OAAO,MAAMC,MAAM,GAAGF,MAAM,CAACG,MAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;KAAMD,M;AAUb,MAAME,QAAQ,GAAGJ,MAAM,CAACK,CAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMD,Q;AAYN,MAAME,aAAa,GAAGN,MAAM,CAACO,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMD,a;AAeN,eAAe,SAASE,YAAT,CAAuB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAvB,EAAgE;AAAA;;AAC7E,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBd,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAMe,OAAO,GAAGhB,MAAM,CAAkB,IAAlB,CAAtB,CAF6E,CAI7E;AACA;AACA;AACA;;AAEA,QAAMiB,WAAW,GAAIC,CAAD,IAAW;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,UAAU,CAAC,CAACD,QAAF,CAAV;AACD,GAHD;;AAKA,QAAMM,QAAQ,GAAG,MAAM;AACrB,QAAIJ,OAAO,CAACK,OAAZ,EAAqBL,OAAO,CAACK,OAAR,CAAgBC,KAAhB;AACtB,GAFD;;AAIA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA,2BACE,QAAC,mBAAD;AAAqB,MAAA,cAAc,EAAEN,WAArC;AAAA,gBACOH,QAAQ,gBACL;AAAA,gCACA,QAAC,MAAD;AAAA,oBAAUH;AAAV;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,aAAD;AAAA,oBAECa,MAAM,CAACC,MAAP,CAAcZ,WAAd,EAA2Ba,OAA3B,GAAqCC,GAArC,CAAyC,CAACC,IAAD,EAAOC,KAAP,kBACtC,QAAC,QAAD;AAAU,YAAA,GAAG,EAAEb,OAAf;AAAwB,YAAA,WAAW,EAAEI,QAArC;AACY,YAAA,IAAI,EAAEQ,IAAI,CAACE,IADvB;AAC6B,YAAA,MAAM,EAAC,QADpC;AAC6C,YAAA,GAAG,EAAC,qBADjD;AAEA,YAAA,OAAO,EAAE,MAAMf,UAAU,CAAC,CAACD,QAAF,CAFzB;AAAA,sBAEuCc,IAAI,CAACG;AAF5C,aACKF,KADL;AAAA;AAAA;AAAA;AAAA,kBADH;AAFD;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,gBAYL,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEZ,WAAjB,CACS;AADT;AAAA,wBAECN,QAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAbV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAzCuBD,Y;;MAAAA,Y","sourcesContent":["import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport OutsideClickHandler from 'react-outside-click-handler'\n\ninterface Props {\n    children?: React.ReactNode,\n    style?: object,\n    menuOptions: Array<any> | Object\n}\n\nexport const Button = styled.button`\ncolor: green;\nbackground-color: red;\nborder-bottom: 2px solid #daa520;\npadding: .5rem;\nmargin: .5rem;\nbackground: transparent;\nfont-weight: 800;\nborder-radius: .7rem;\n`\nconst MenuLink = styled.a`\ncolor: green;\nbackground: #FF0000;\nborder-right: 2px solid #daa520;\nborder-bottom: 2px solid #daa520;\npadding: .5rem;\nmargin: .5rem;\nbackground: transparent;\nfont-weight: 800;\nborder-radius: .7rem;\n`\n\nconst MenuContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nbackground: rgb(211,211,211);\njustify-content: flex-start;\nalign-items: center;\nposition: absolute;\noverflow: auto;\nheight: 10rem;\nwidth: 10rem;\nmargin: 1rem;\npadding: 1rem;\nborder-radius: .5rem;\n`\n\nexport default function DropdownMenu ({ children, style, menuOptions }: Props) {\n  const [menuOpen, toggleMenu] = useState(false)\n  const hovered = useRef<HTMLLinkElement>(null)\n\n  // const handleBlur = (e:any) => {\n  //   e.preventDefault()\n  //   toggleMenu(!menuOpen)\n  // }\n\n  const handleClick = (e:any) => {\n    e.preventDefault()\n    toggleMenu(!menuOpen)\n  }\n\n  const mousedOn = () => {\n    if (hovered.current) hovered.current.focus()\n  }\n\n  return (\n    <div style={{ position: 'sticky' }} >\n      <OutsideClickHandler onOutsideClick={handleClick}>\n            {menuOpen\n              ? <div>\n                <Button >{children}</Button>\n                <MenuContainer>\n                  {/* {console.log(menuRef)} */}\n                {Object.values(menuOptions).reverse().map((item, index) => (\n                    <MenuLink ref={hovered} onMouseOver={mousedOn}\n                    key={index} href={item.href} target=\"_blank\" rel=\"noopener noreferrer\"\n                    onClick={() => toggleMenu(!menuOpen)}>{item.name}</MenuLink>\n                ))}\n              </MenuContainer>\n              </div>\n              : <Button onFocus={handleClick}\n                         // useRef hook may be the key to solving this problem.\n              > {children}</Button>\n            }\n          {/* </div> */}\n          </OutsideClickHandler>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}